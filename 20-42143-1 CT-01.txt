<html><head></head><body style="overflow-wrap: break-word; -webkit-nbsp-mode: space; line-break: after-white-space;"><div>1.SELECT department_id, job_id, hire_date</div><div>FROM (</div><div>&nbsp; SELECT department_id, job_id, hire_date,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY hire_date DESC) AS rn</div><div>&nbsp; FROM employees</div><div>)</div><div>WHERE rn = 1</div><div>ORDER BY department_id DESC;</div><div><br></div><div>2. SELECT TO_CHAR(SYSDATE, 'Day HH:MI:SS') AS "Day and Time"</div><div>FROM dual;</div><div><br></div><div>3.SELECT&nbsp;</div><div>&nbsp; employee_name AS "Name",</div><div>&nbsp; salary AS "Salary",</div><div>&nbsp; CASE&nbsp;</div><div>&nbsp; &nbsp; WHEN department_id = 10 THEN salary + 1000</div><div>&nbsp; &nbsp; WHEN department_id = 20 THEN salary + 2000</div><div>&nbsp; &nbsp; ELSE salary + 3000</div><div>&nbsp; END AS "Dream Salary"</div><div>FROM employees</div><div>ORDER BY "Dream Salary" ASC;</div><div><br></div><div>4.SELECT&nbsp;</div><div>&nbsp; CASE&nbsp;</div><div>&nbsp; &nbsp; WHEN MOD(2016, 4) = 0 AND (MOD(2016, 100) != 0 OR MOD(2016, 400) = 0) THEN 'Leap Year'</div><div>&nbsp; &nbsp; ELSE 'Not a Leap Year'</div><div>&nbsp; END AS "Leap Year"</div><div>FROM dual;</div><div><br></div><div>5.SELECT name, job</div><div>FROM employees</div><div>WHERE job IN ('MANAGER', 'CLERK', 'ANALYST');</div><div><br></div><div>6.SELECT name</div><div>FROM employees</div><div>WHERE name LIKE '%M%';</div><div><br></div><div>7.SELECT name</div><div>FROM employees</div><div>WHERE name LIKE '%LL%' OR name LIKE '%TT%';</div><div><br></div><div>8.SELECT SUBSTR('00abc000', 1, INSTR('00abc000', '000') - 1) AS trimmed_string</div><div>FROM dual;</div><div><br></div><div>9.CREATE TABLE Teacher (</div><div>&nbsp; t_id NUMBER(10),</div><div>&nbsp; t_name VARCHAR2(20),</div><div>&nbsp; phone NUMBER(10),</div><div>&nbsp; salary NUMBER(7),</div><div>&nbsp; email VARCHAR2(30)</div><div>);</div><div><br></div><div><br></div><div>Subquery:</div><div>1.SELECT e.employee_name</div><div>FROM employees e</div><div>WHERE e.hire_date &gt; (</div><div>&nbsp; SELECT hire_date</div><div>&nbsp; FROM employees</div><div>&nbsp; WHERE employee_name = 'KING'</div><div>);</div><div><br></div><div>2.SELECT e.employee_name</div><div>FROM employees e</div><div>WHERE e.salary &gt; (</div><div>&nbsp; SELECT MAX(salary)</div><div>&nbsp; FROM employees</div><div>&nbsp; WHERE job = 'CLERK'</div><div>);</div><div><br></div><div>3.SELECT e.employee_name</div><div>FROM employees e</div><div>WHERE e.salary &gt; ANY (</div><div>&nbsp; SELECT salary</div><div>&nbsp; FROM employees</div><div>&nbsp; WHERE job = 'CLERK'</div><div>);</div><div><br></div><div>4.SELECT e.employee_name, e.department_id, e.salary</div><div>FROM employees e</div><div>WHERE (e.department_id, e.salary) IN (</div><div>&nbsp; SELECT department_id, MAX(salary)</div><div>&nbsp; FROM employees</div><div>&nbsp; GROUP BY department_id</div><div>);</div><div><br></div><div>5.SELECT e.employee_name</div><div>FROM employees e</div><div>WHERE e.salary &gt; (</div><div>&nbsp; SELECT salary</div><div>&nbsp; FROM employees</div><div>&nbsp; WHERE employee_name = 'SMITH'</div><div>);</div><div><br></div><div><br></div><div>Joining:</div><div>1.SELECT employee_name</div><div>FROM employees</div><div>WHERE city = 'DALLAS';</div><div><br></div><div>2.SELECT e.employee_name</div><div>FROM employees e</div><div>JOIN employees m ON e.manager_id = m.employee_id</div><div>WHERE e.hire_date &lt; m.hire_date;</div><div><br></div><div>3.SELECT&nbsp;</div><div>&nbsp; e.employee_name,</div><div>&nbsp; CASE</div><div>&nbsp; &nbsp; WHEN m.employee_name IS NULL THEN 'NO MANAGER'</div><div>&nbsp; &nbsp; ELSE m.employee_name</div><div>&nbsp; END AS manager_name</div><div>FROM employees e</div><div>LEFT JOIN employees m ON e.manager_id = m.employee_id;</div><div><br></div><div>4.SELECT&nbsp;</div><div>&nbsp; e.employee_name,</div><div>&nbsp; sg.grade</div><div>FROM employees e</div><div>JOIN salary_grades sg ON e.salary BETWEEN sg.min_salary AND sg.max_salary;</div><div><br></div><div>5.SELECT e.employee_name, e.department_id, d.department_name</div><div>FROM employees e</div><div>JOIN departments d ON e.department_id = d.department_id;</div><div><br></div><div><br></div><div>Scheme Diagram:</div><div>1.CREATE TABLE titles (</div><div>&nbsp; titleid NUMBER(10) PRIMARY KEY,</div><div>&nbsp; title VARCHAR2(100) NOT NULL,</div><div>&nbsp; pubid NUMBER(10),</div><div>&nbsp; subid NUMBER(10),</div><div>&nbsp; pubdate DATE,</div><div>&nbsp; cover VARCHAR2(100),</div><div>&nbsp; price NUMBER(10, 2),</div><div>&nbsp; CONSTRAINT fk_pubid</div><div>&nbsp; &nbsp; FOREIGN KEY (pubid)</div><div>&nbsp; &nbsp; REFERENCES publishers(pubid),</div><div>&nbsp; CONSTRAINT fk_subid</div><div>&nbsp; &nbsp; FOREIGN KEY (subid)</div><div>&nbsp; &nbsp; REFERENCES publishers(subid)</div><div>);</div><div><br></div><div>2.CREATE TABLE subjects (</div><div>&nbsp; subid NUMBER(10) PRIMARY KEY,</div><div>&nbsp; sname VARCHAR2(100) NOT NULL</div><div>);</div><div><br></div><div>3.CREATE TABLE publishers (</div><div>&nbsp; &nbsp; pubid INT PRIMARY KEY,</div><div>&nbsp; &nbsp; pname VARCHAR(100),</div><div>&nbsp; &nbsp; email VARCHAR(100),</div><div>&nbsp; &nbsp; phone VARCHAR(20)</div><div>);</div><div><br></div><div>4.CREATE TABLE authors (</div><div>&nbsp; &nbsp; auid INT PRIMARY KEY,</div><div>&nbsp; &nbsp; aname VARCHAR(100),</div><div>&nbsp; &nbsp; email VARCHAR(100),</div><div>&nbsp; &nbsp; phone VARCHAR(20)</div><div>);</div><div><br></div><div>5.CREATE TABLE titleauthors (</div><div>&nbsp; &nbsp; titleid INT,</div><div>&nbsp; &nbsp; authid INT,</div><div>&nbsp; &nbsp; importance INT,</div><div>&nbsp; &nbsp; FOREIGN KEY (titleid) REFERENCES titles(titleid),</div><div>&nbsp; &nbsp; FOREIGN KEY (authid) REFERENCES authors(auid)</div><div>);</div><div><br></div></body></html>